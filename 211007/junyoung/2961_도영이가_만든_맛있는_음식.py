# 도영이가 만든 맛있는 음식

# 도영이는 짜파구리 요리사로 명성을 날렸었다. 이번에는 이전에 없었던 새로운 요리에 도전을 해보려고 한다.
# 지금 도영이의 앞에는 재료가 N개 있다. 도영이는 각 재료의 신맛 S와 쓴맛 B를 알고 있다. 여러 재료를 이용해서
# 요리할 때, 그 음식의 신맛은 사용한 재료의 신맛의 곱이고, 쓴맛은 합이다.
# 시거나 쓴 음식을 좋아하는 사람은 많지 않다. 도영이는 재료를 적절히 섞어서 요리의 신맛과 쓴맛의 차이를 작게
# 만들려고 한다. 또, 물을 요리라고 할 수는 없기 때문에, 재료는 적어도 하나 사용해야 한다.
# 재료의 신맛과 쓴맛이 주어졌을 때, 신맛과 쓴맛의 차이가 가장 작은 요리를 만드는 프로그램을 작성하시오.

# 첫째 줄에 재료의 개수 N(1 ≤ N ≤ 10)이 주어진다. 다음 N개 줄에는 그 재료의 신맛과 쓴맛이 공백으로 구분되어 주어진다.
# 모든 재료를 사용해서 요리를 만들었을 때, 그 요리의 신맛과 쓴맛은 모두 1,000,000,000보다 작은 양의 정수이다.
from itertools import combinations

N = int(input())                                  # 개수 입력
arr1 = []                                         # 리스트1
for i in range(N):                                # 리스트에 입력
    arr = list(map(int, input().split()))
    arr1.append(arr)
combination = []                                  # 조합 리스트
for i in range(1, len(arr1)+1):                   # 반복해서
    combination.append(combinations(arr1, i))     # 조합값들을 다 넣기
ans = 123456789                                   # 정답
for i in combination:                             # 조합을 돌면서
    for j in i:                                   # 그안의 조합들중에서
        sin = 1                                   # 신맛은 곱해야하니깐 초기값 1로 설정
        ssen = 0                                  # 쓴맛은 더하니깐 초기값 0 설정
        for k in j:                               # 조합원소의 인덱스중
            sin = sin*k[0]                        # 신맛은 곱으로 계속 갱신
            ssen = ssen + k[1]                    # 쓴맛은 + 갱신
        ans = min(ans, abs(sin-ssen))             # 최소값은 절대값으로 두값을 뺀값
print(ans)