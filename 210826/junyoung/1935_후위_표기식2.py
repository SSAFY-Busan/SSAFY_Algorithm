#후위 표기식2

# 후위 표기식과 각 피연산자에 대응하는 값들이 주어져 있을 때, 그 식을 계산하는 프로그램을 작성하시오.

# 첫째 줄에 피연산자의 개수(1 ≤ N ≤ 26) 가 주어진다. 그리고 둘째 줄에는 후위 표기식이 주어진다.
# (여기서 피연산자는 A~Z의 영대문자이며, A부터 순서대로 N개의 영대문자만이 사용되며, 길이는 100을 넘지 않는다)
# 그리고 셋째 줄부터 N+2번째 줄까지는 각 피연산자에 대응하는 값이 주어진다. 3번째 줄에는 A에 해당하는 값,
# 4번째 줄에는 B에 해당하는값 , 5번째 줄에는 C ...이 주어진다, 그리고 피연산자에 대응 하는 값은 100보다 작거나 같은 자연수이다.
# 후위 표기식을 앞에서부터 계산했을 때, 식의 결과와 중간 결과가 -20억보다 크거나 같고, 20억보다 작거나 같은 입력만 주어진다.

N = int(input())                         # 알파벳 갯수
sic = input()                            # 식입력
stack = []                               # 스택
num = [0] * N                            # 숫자리스트

for i in range(N):                       # 알파벳 수만 큼
    num[i] = int(input())                # 값을 입력
for i in sic:                            # 후위로 바꾼 식을 반복해서
    if i == '+':                         # + 가 있다면
        A = stack.pop()                  # 값 2개를 빼서
        B = stack.pop()
        stack.append(B + A)              # 더한값을 추가하고
    elif i == '-':                       # - 이 있다면
        A = stack.pop()                  # 값 2개 빼서
        B = stack.pop()
        stack.append(B - A)              # 빼기
    elif i == '*':                       # * 이 있다면
        A = stack.pop()                  # 값 2개 빼서
        B = stack.pop()
        stack.append(B * A)              # 곱하기
    elif i == '/':                       # / 이 있다면
        A = stack.pop()                  # 값 2개 빼서
        B = stack.pop()
        stack.append(B / A)              # 나누기
    else:                                # A 부터 순서대로 넣기
        stack.append(num[ord(i) - 65])   # 알파벳을 넣음 순서대로 넣을려면 이런식으로 넣어야댐...

print(format(stack[0], ".2f"))           # 소수점 2자리까지