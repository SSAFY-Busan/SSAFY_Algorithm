# 수 이어가기

#다음과 같은 규칙에 따라 수들을 만들려고 한다.
# 첫 번째 수로 양의 정수가 주어진다.
# 두 번째 수는 양의 정수 중에서 하나를 선택한다.
# 세 번째부터 이후에 나오는 모든 수는 앞의 앞의 수에서 앞의 수를 빼서 만든다. 예를 들어
# 세 번째 수는 첫 번째 수에서 두 번째 수를 뺀 것이고, 네 번째 수는 두 번째 수에서 세 번째 수를 뺀 것이다.
# 음의 정수가 만들어지면, 이 음의 정수를 버리고 더 이상 수를 만들지 않는다.
# 첫 번째 수로 100이 주어질 때, 두 번째 수로 60을 선택하여 위의 규칙으로 수들을 만들면
# 7개의 수들 100, 60, 40, 20, 20 , 0, 20이 만들어진다. 그리고 두 번째 수로 62를 선택하여 위의 규칙으로
# 수들을 만들면 8개의 수들 100, 62, 38, 24, 14, 10, 4, 6이 만들어진다. 위의 예에서 알 수 있듯이,
# 첫 번째 수가 같더라도 두 번째 수에 따라서 만들어지는 수들의 개수가 다를 수 있다.

# 입력으로 첫 번째 수가 주어질 때, 이 수에서 시작하여 위의 규칙으로 만들어지는 최대 개수의 수들을
# 구하는 프로그램을 작성하시오. 최대 개수의 수들이 여러 개일 때, 그중 하나의 수들만 출력하면 된다.

N = int(input())                    # 첫수
max_cnt = 0                         # 카운트가 가장 클때
max_lsit = []                       # 그 값의 리스트
num_list = []                       # 나열할 수들

for i in range(N, 0, -1):           # N 부터 0 까지 가는데
    cnt = 0                         # 카운트
    two = i                         # 두번째수 i
    three = N - two                 # 세번째수
    one = N                         # 첫번째 수
    num_list = [one, two, three]    # 처음 두번째 세번째 수 추가
    while three >= 0:               # 세번째가 0보다 크다면
        one = two                   # 첫번째는 두번째 수가 오고
        two = three                 # 2번째는 세번째 수 가 오고
        three = one - two           # 세번째는 위의 두수의 차
        if three < 0:               # 0보다 작으면
            break                   # 멈춰
        cnt += 1                    # 카운트 1 증가
        num_list += [three]         # 리스트에 세번째수 계속 추가

    if max_cnt < cnt:               # max 값 찾기
        max_cnt = cnt
        max_lsit = num_list         # 그때의 리스트

print(len(max_lsit))                # max 의 길이
print(*max_lsit)                    # max 의 값들



